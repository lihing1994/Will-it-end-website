{"ast":null,"code":"var _jsxFileName = \"/Users/lihing1994/Desktop/willitend.com-home/src/components/Subscription.js\";\nimport allStates from \"./allstates.json\";\nimport Button from '@material-ui/core/Button';\nimport FormAlert from \"./FormAlert.js\";\nimport Grid from '@material-ui/core/Grid';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport WillitendService from \"../../services/Willitend.service.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  menu: {\n    width: 200\n  }\n});\n\nclass Subscription extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePlaceChange = place => event => {\n      this.setState({\n        place: event.target.value\n      });\n    };\n\n    this.handleEmailChange = email => event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      place: 'CA',\n      status: '',\n      key: ''\n    };\n    this.handleForm = this.handleForm.bind(this);\n    this.handlePlaceChange = this.handlePlaceChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n  }\n\n  validateEmail(email) {\n    var mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (email.match(mailformat)) {\n      return true;\n    } else {\n      alert(\"You have entered an invalid email address!\");\n      return false;\n    }\n  }\n\n  handleForm(e) {\n    e.preventDefault();\n\n    if (!this.state.email || !this.state.place) {\n      alert(\"One or more field is empty\");\n    } else {\n      if (this.validateEmail(this.state.email)) {\n        var newsletter = {\n          email: this.state.email,\n          state: this.state.place\n        };\n        WillitendService.createNewsletter(newsletter).catch(e => {\n          console.log(e);\n        });\n        this.setState({\n          email: '',\n          place: 'CA',\n          status: \"We've got your info, thanks!\",\n          key: Math.random()\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Be the first to receive the latest Herd Immunity updates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.container,\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"outlined-required\",\n            label: \"Email\",\n            placeholder: \"Enter email address\",\n            className: classes.textField,\n            type: \"text\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            onChange: this.handleEmailChange('email'),\n            value: this.state.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-select-currency\",\n            select: true,\n            label: \"State*\",\n            className: classes.textField,\n            value: this.state.place,\n            onChange: this.handlePlaceChange('place'),\n            SelectProps: {\n              MenuProps: {\n                className: classes.menu\n              }\n            },\n            helperText: \"Select your state\",\n            margin: \"normal\",\n            variant: \"outlined\",\n            children: allStates.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.id,\n              children: option.id\n            }, option.val, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleForm,\n            style: {\n              height: '55px',\n              marginTop: '16px'\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), this.state.status ? /*#__PURE__*/_jsxDEV(FormAlert, {\n        message: this.state.status\n      }, this.state.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 28\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSubscription.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Subscription);","map":{"version":3,"sources":["/Users/lihing1994/Desktop/willitend.com-home/src/components/Subscription.js"],"names":["allStates","Button","FormAlert","Grid","React","PropTypes","withStyles","MenuItem","TextField","WillitendService","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","menu","width","Subscription","Component","constructor","props","handlePlaceChange","place","event","setState","target","value","handleEmailChange","email","state","status","key","handleForm","bind","validateEmail","mailformat","match","alert","e","preventDefault","newsletter","createNewsletter","catch","console","log","Math","random","render","classes","MenuProps","className","map","option","id","val","height","marginTop","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import allStates from \"./allstates.json\";\nimport Button from '@material-ui/core/Button';\nimport FormAlert from \"./FormAlert.js\";\nimport Grid from '@material-ui/core/Grid';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport WillitendService from \"../../services/Willitend.service.js\";\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nclass Subscription extends React.Component {\n\n  constructor (props) {\n    super (props);\n    this.state = {email : '', place: 'CA', status : '', key: ''};\n\n    this.handleForm = this.handleForm.bind(this); \n    this.handlePlaceChange = this.handlePlaceChange.bind(this); \n    this.handleEmailChange = this.handleEmailChange.bind(this);  \n  }\n\n  handlePlaceChange = place => event => {\n    this.setState({\n      place: event.target.value,\n    });\n  };\n\n  handleEmailChange = email => event => {\n    this.setState({\n      email: event.target.value\n    })\n  }\n\n  validateEmail(email) {\n\n    var mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if(email.match(mailformat)) {\n        return true;\n      } else {\n        alert(\"You have entered an invalid email address!\");\n              return false;\n    }\n  }\n  \n  handleForm (e) {\n    e.preventDefault();\n\n    if (!this.state.email || !this.state.place) {\n\n      alert(\"One or more field is empty\");\n    } else {\n\n      if (this.validateEmail(this.state.email)) {\n        \n    var newsletter = {\n      email : this.state.email, \n      state : this.state.place\n    }; \n\n    WillitendService.createNewsletter(newsletter)\n      .catch(e => {\n        console.log(e);\n      });\n\n    this.setState({\n      email: '', place: 'CA', status: \"We've got your info, thanks!\", key: Math.random()\n    })\n\n  }\n}\n\n  }; \n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n      <Grid container={true} direction = \"row\" justify = \"center\" alignItems = \"center\">\n      <h3>Be the first to receive the latest Herd Immunity updates</h3>\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Email\"\n          placeholder = \"Enter email address\"\n          className={classes.textField}\n          type = \"text\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange = {this.handleEmailChange('email')}\n          value = {this.state.email}\n        />\n\n        <TextField\n          id=\"outlined-select-currency\"\n          select\n          label=\"State*\"\n          className={classes.textField}\n          value={this.state.place}\n          onChange={this.handlePlaceChange('place')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText=\"Select your state\"\n          margin=\"normal\"\n          variant=\"outlined\"\n        >\n          {allStates.map(option => (\n            <MenuItem key={option.val} value={option.id}>\n              {option.id}\n            </MenuItem>\n          ))}\n        </TextField>\n        <br/>\n        <Button onClick = {this.handleForm} style={{height: '55px', marginTop : '16px'}} variant=\"contained\" color=\"primary\">\n          Submit\n        </Button>\n      </form>\n      </Grid>\n\n      {this.state.status ? <FormAlert key = {this.state.key} message = {this.state.status} /> : null}\n\n</div>\n    );\n  }\n}\n\nSubscription.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Subscription);\n"]},"metadata":{},"sourceType":"module"}