{"ast":null,"code":"var _jsxFileName = \"/Users/lihing1994/Desktop/willitend.com-home/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport allStates from \"./allstates.json\";\nimport './Map.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport WillitendService from '../services/Willitend.service.js';\nimport { geoCentroid } from \"d3-geo\";\nimport Box from '@material-ui/core/Box';\nimport { ComposableMap, Geographies, Geography, Marker, Annotation } from \"react-simple-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultProps = {\n  bgcolor: '#880e4f',\n  borderColor: 'text.primary',\n  m: 1,\n  border: 1,\n  style: {\n    width: '2rem',\n    height: '2rem'\n  }\n};\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\nconst offsets = {\n  VT: [50, -8],\n  NH: [34, 2],\n  MA: [30, -1],\n  RI: [28, 2],\n  CT: [35, 10],\n  NJ: [34, 1],\n  DE: [33, 0],\n  MD: [47, 10],\n  DC: [49, 21]\n};\nconst map = {\n  \"Alabama\": \"AL\",\n  \"Alaska\": \"AK\",\n  \"American Samoa\": \"AS\",\n  \"Arizona\": \"AZ\",\n  \"Arkansas\": \"AR\",\n  \"Armed Forces Americas\": \"AA\",\n  \"Armed Forces Europe\": \"AE\",\n  \"Armed Forces Pacific\": \"AP\",\n  \"California\": \"CA\",\n  \"Colorado\": \"CO\",\n  \"Connecticut\": \"CT\",\n  \"Delaware\": \"DE\",\n  \"District Of Columbia\": \"DC\",\n  \"Florida\": \"FL\",\n  \"Georgia\": \"GA\",\n  \"Guam\": \"GU\",\n  \"Hawaii\": \"HI\",\n  \"Idaho\": \"ID\",\n  \"Illinois\": \"IL\",\n  \"Indiana\": \"IN\",\n  \"Iowa\": \"IA\",\n  \"Kansas\": \"KS\",\n  \"Kentucky\": \"KY\",\n  \"Louisiana\": \"LA\",\n  \"Maine\": \"ME\",\n  \"Marshall Islands\": \"MH\",\n  \"Maryland\": \"MD\",\n  \"Massachusetts\": \"MA\",\n  \"Michigan\": \"MI\",\n  \"Minnesota\": \"MN\",\n  \"Mississippi\": \"MS\",\n  \"Missouri\": \"MO\",\n  \"Montana\": \"MT\",\n  \"Nebraska\": \"NE\",\n  \"Nevada\": \"NV\",\n  \"New Hampshire\": \"NH\",\n  \"New Jersey\": \"NJ\",\n  \"New Mexico\": \"NM\",\n  \"New York\": \"NY\",\n  \"North Carolina\": \"NC\",\n  \"North Dakota\": \"ND\",\n  \"Northern Mariana Islands\": \"NP\",\n  \"Ohio\": \"OH\",\n  \"Oklahoma\": \"OK\",\n  \"Oregon\": \"OR\",\n  \"Pennsylvania\": \"PA\",\n  \"Puerto Rico\": \"PR\",\n  \"Rhode Island\": \"RI\",\n  \"South Carolina\": \"SC\",\n  \"South Dakota\": \"SD\",\n  \"Tennessee\": \"TN\",\n  \"Texas\": \"TX\",\n  \"US Virgin Islands\": \"VI\",\n  \"Utah\": \"UT\",\n  \"Vermont\": \"VT\",\n  \"Virginia\": \"VA\",\n  \"Washington\": \"WA\",\n  \"West Virginia\": \"WV\",\n  \"Wisconsin\": \"WI\",\n  \"Wyoming\": \"WY\"\n};\nvar is_load_failed = false;\nvar is_load = false;\n\nconst Map = ({\n  setToolTipContent\n}) => {\n  _s();\n\n  const [stateInfo, setStatInfo] = useState([]); // Only get information from database at the first time.\n\n  useEffect(() => {\n    WillitendService.getAllStateInfo().then(return_data => {\n      setStatInfo(return_data.data);\n    }).catch(err => {\n      alert(err);\n      is_load_failed = true;\n      console.log(\"Unable to Loaded\");\n    });\n    console.log(\"Map ==> state info has been loaded\");\n    is_load = true;\n  }, []);\n\n  const getStateInfo = temp_name => {\n    if (!is_load_failed && is_load && stateInfo.length === 59) {\n      for (var i = 0; i < stateInfo.length; i++) {\n        if (stateInfo[i].name === temp_name) return stateInfo[i];\n      }\n    } else {\n      var err_message = {\n        \"hdays\": -99,\n        \"firstShot\": -99,\n        \"secShot\": -99,\n        \"vacPerDay\": -99\n      };\n      return err_message;\n    }\n  }; // Assign Color to difference states \n  // based on how many day to herd immunity\n\n\n  function getStateColor(temp_name) {\n    if (is_load_failed) return \"#9c4dcc\";else {\n      for (var i = 0; i < stateInfo.length; i++) {\n        if (temp_name === stateInfo[i].name) {\n          if (stateInfo[i].hdays >= 150) return \"#f44336\";else if (stateInfo[i].hdays >= 120) return \"#fa5788\";else if (stateInfo[i].hdays >= 100) return \"#ff8a50\";\n        }\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ComposableMap, {\n      \"data-tip\": \"\",\n      projection: \"geoAlbersUsa\",\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: geoUrl,\n        children: ({\n          geographies\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            stroke: \"white\",\n            geography: geo,\n            fill: getStateColor(map[geo.properties.name]),\n            \"data-tip\": true,\n            \"data-for\": geo.id,\n            onMouseEnter: () => {\n              const name = geo.properties.name;\n              const id = geo.id;\n              const state_vacc_data = getStateInfo(map[name]);\n              return setToolTipContent(`<h1>State of ${name} </h1>\n                   <h1 >${state_vacc_data.hdays} DAYS to Herd Immunity.</h1>\n                   <h3 >${state_vacc_data.firstShot} residents are partially vaccinated.</h3>\n                   <h3 >${state_vacc_data.secShot} residents are fully vaccinated.</h3>\n                   <h3 >${state_vacc_data.vacPerDay} residents will be vaccinated per day.</h3> \n                   `);\n            },\n            onMouseLeave: () => {\n              setToolTipContent(\"\");\n            },\n            style: {\n              hover: {\n                stroke: \"black\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 14\n          }, this)), geographies.map(geo => {\n            const centroid = geoCentroid(geo);\n            const cur = allStates.find(s => s.val === geo.id);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              children: cur && centroid[0] > -160 && centroid[0] < -67 && (Object.keys(offsets).indexOf(cur.id) === -1 ? /*#__PURE__*/_jsxDEV(Marker, {\n                coordinates: centroid,\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  y: \"2\",\n                  fontSize: 14,\n                  textAnchor: \"middle\",\n                  children: cur.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(Annotation, {\n                subject: centroid,\n                dx: offsets[cur.id][0],\n                dy: offsets[cur.id][1],\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  x: 4,\n                  fontSize: 14,\n                  alignmentBaseline: \"middle\",\n                  children: cur.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }, this))\n            }, geo.rsmKey + \"-name\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      borderRadius: \"borderRadius\",\n      ...defaultProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"More than 100 Days to reach Herd Immunity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"wuFirWm0JpUxrH7ilk3KgxIbej8=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/lihing1994/Desktop/willitend.com-home/src/components/Map.js"],"names":["allStates","React","useState","useEffect","axios","WillitendService","geoCentroid","Box","ComposableMap","Geographies","Geography","Marker","Annotation","defaultProps","bgcolor","borderColor","m","border","style","width","height","geoUrl","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","map","is_load_failed","is_load","Map","setToolTipContent","stateInfo","setStatInfo","getAllStateInfo","then","return_data","data","catch","err","alert","console","log","getStateInfo","temp_name","length","i","name","err_message","getStateColor","hdays","geographies","geo","properties","id","state_vacc_data","firstShot","secShot","vacPerDay","hover","stroke","rsmKey","centroid","cur","find","s","val","Object","keys","indexOf"],"mappings":"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","sourcesContent":["import allStates from \"./allstates.json\";\nimport './Map.css';\nimport React, { useState ,useEffect} from 'react';\nimport axios from 'axios';\nimport WillitendService from '../services/Willitend.service.js';\nimport { geoCentroid } from \"d3-geo\";\nimport Box from '@material-ui/core/Box';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Annotation\n} from \"react-simple-maps\";\nconst defaultProps = {\n  bgcolor: '#880e4f',\n  borderColor: 'text.primary',\n  m: 1,\n  border: 1,\n  style: { width: '2rem', height: '2rem' },\n};\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\nconst offsets = {\n  VT: [50, -8],\n  NH: [34, 2],\n  MA: [30, -1],\n  RI: [28, 2],\n  CT: [35, 10],\n  NJ: [34, 1],\n  DE: [33, 0],\n  MD: [47, 10],\n  DC: [49, 21]\n};\n\nconst map = {\n  \"Alabama\": \"AL\",\n  \"Alaska\" : \"AK\",\n  \"American Samoa\" : \"AS\",\n  \"Arizona\" : \"AZ\",\n  \"Arkansas\" : \"AR\",\n  \"Armed Forces Americas\" : \"AA\",\n  \"Armed Forces Europe\" : \"AE\",\n  \"Armed Forces Pacific\" : \"AP\",\n  \"California\" : \"CA\",\n  \"Colorado\" : \"CO\",\n  \"Connecticut\" : \"CT\",\n  \"Delaware\" : \"DE\",\n  \"District Of Columbia\" : \"DC\",\n  \"Florida\" : \"FL\",\n  \"Georgia\" : \"GA\",\n  \"Guam\" : \"GU\",\n  \"Hawaii\" : \"HI\",\n  \"Idaho\" : \"ID\",\n  \"Illinois\" : \"IL\",\n  \"Indiana\" : \"IN\",\n  \"Iowa\" : \"IA\",\n  \"Kansas\" : \"KS\",\n  \"Kentucky\" : \"KY\",\n  \"Louisiana\" : \"LA\",\n  \"Maine\" : \"ME\",\n  \"Marshall Islands\" : \"MH\",\n  \"Maryland\" : \"MD\",\n  \"Massachusetts\" : \"MA\",\n  \"Michigan\" : \"MI\",\n  \"Minnesota\" : \"MN\",\n  \"Mississippi\" : \"MS\",\n  \"Missouri\" : \"MO\",\n  \"Montana\" : \"MT\",\n  \"Nebraska\" : \"NE\",\n  \"Nevada\" : \"NV\",\n  \"New Hampshire\" : \"NH\",\n  \"New Jersey\" : \"NJ\",\n  \"New Mexico\" : \"NM\",\n  \"New York\" : \"NY\",\n  \"North Carolina\" : \"NC\",\n  \"North Dakota\" : \"ND\",\n  \"Northern Mariana Islands\" : \"NP\",\n  \"Ohio\" : \"OH\",\n  \"Oklahoma\" : \"OK\",\n  \"Oregon\" : \"OR\",\n  \"Pennsylvania\" : \"PA\",\n  \"Puerto Rico\" : \"PR\",\n  \"Rhode Island\" : \"RI\",\n  \"South Carolina\" : \"SC\",\n  \"South Dakota\" : \"SD\",\n  \"Tennessee\" : \"TN\",\n  \"Texas\" : \"TX\",\n  \"US Virgin Islands\" : \"VI\",\n  \"Utah\" : \"UT\",\n  \"Vermont\" : \"VT\",\n  \"Virginia\" : \"VA\",\n  \"Washington\" : \"WA\",\n  \"West Virginia\" : \"WV\",\n  \"Wisconsin\" : \"WI\",\n  \"Wyoming\" : \"WY\"\n}\n\n\nvar is_load_failed = false;\nvar is_load = false;\n\nconst Map = ({ setToolTipContent}) => { \n  const [stateInfo, setStatInfo] = useState([]);\n  // Only get information from database at the first time.\n  useEffect(() => {\n    WillitendService.getAllStateInfo()\n    .then(return_data =>{\n    setStatInfo(return_data.data)\n    })\n    .catch(err=>{\n      alert(err);\n      is_load_failed = true;\n      console.log(\"Unable to Loaded\");\n      }\n    );\n    console.log(\"Map ==> state info has been loaded\");\n    is_load = true;\n  }, []);\n  \n  const getStateInfo = (temp_name) => {\n    \n    if(!is_load_failed && is_load &&  stateInfo.length === 59 ){\n      for(var i =0;i<stateInfo.length;i++){\n        if(stateInfo[i].name === temp_name) return stateInfo[i];\n      }\n    }\n    else{\n      var err_message = {\n        \"hdays\" : -99,\n        \"firstShot\" : -99,\n        \"secShot\" : -99,\n        \"vacPerDay\" : -99\n      };\n      return err_message;\n    }\n  };\n  \n// Assign Color to difference states \n// based on how many day to herd immunity\nfunction getStateColor (temp_name) {\n  if(is_load_failed) return \"#9c4dcc\";\n  else{\n    for(var i =0;i<stateInfo.length;i++){\n      if(temp_name === stateInfo[i].name){\n        if(stateInfo[i].hdays >=150 ) return \"#f44336\";\n        else if(stateInfo[i].hdays >=120 ) return \"#fa5788\";\n        else if(stateInfo[i].hdays >=100 ) return \"#ff8a50\"\n       \n      }\n    }\n  }\n}\n  return (\n    <div>\n    <ComposableMap data-tip =\"\" projection=\"geoAlbersUsa\">\n      <Geographies geography={geoUrl}>\n        {({ geographies }) => (\n          <>\n            {geographies.map(geo => (\n             <Geography\n                key={geo.rsmKey}\n                stroke=\"white\"\n                geography={geo}\n                fill = {getStateColor(map[geo.properties.name])}\n                data-tip data-for={geo.id}\n                onMouseEnter = { () => {\n                  const name = geo.properties.name; \n                  const id = geo.id;\n                  const state_vacc_data = getStateInfo(map[name]);\n                  return (\n                  setToolTipContent(`<h1>State of ${name} </h1>\n                   <h1 >${state_vacc_data.hdays} DAYS to Herd Immunity.</h1>\n                   <h3 >${state_vacc_data.firstShot} residents are partially vaccinated.</h3>\n                   <h3 >${state_vacc_data.secShot} residents are fully vaccinated.</h3>\n                   <h3 >${state_vacc_data.vacPerDay} residents will be vaccinated per day.</h3> \n                   `));\n                }}\n                onMouseLeave = { () =>{\n                  setToolTipContent(\"\");\n                }}\n                style={{\n                    hover: {\n                      stroke: \"black\"\n                    }\n                  }}\n              />\n            ))}\n            {geographies.map(geo => {\n              const centroid = geoCentroid(geo);\n              const cur = allStates.find(s => s.val === geo.id);\n              return (\n                <g key={geo.rsmKey + \"-name\"}>\n                  {cur &&\n                    centroid[0] > -160 &&\n                    centroid[0] < -67 &&\n                    (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n                      <Marker coordinates={centroid}>\n                        <text y=\"2\" fontSize={14} textAnchor=\"middle\">\n                          {cur.id}\n                        </text>\n                      </Marker>\n                    ) : (\n                      <Annotation\n                        subject={centroid}\n                        dx={offsets[cur.id][0]}\n                        dy={offsets[cur.id][1]}\n                      >\n                        <text x={4} fontSize={14} alignmentBaseline=\"middle\">\n                          {cur.id}\n                        </text>\n                      </Annotation>\n                    ))}\n                </g>\n              );\n            })}\n          </>\n        )}\n      </Geographies>\n    </ComposableMap>\n      <Box borderRadius=\"borderRadius\" {...defaultProps}>\n      </Box>\n      <h1>More than 100 Days to reach Herd Immunity</h1>\n    </div>\n  );\n};\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}