{"ast":null,"code":"var _jsxFileName = \"/Users/lihing1994/Desktop/willitend.com-home/src/components/Textfield.js\",\n    _s = $RefreshSig$();\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport WillitendService from '../services/Willitend.service.js';\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    width: '100%',\n    display: 'grid',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nconst map = {\n  \"Alabama\": \"AL\",\n  \"Alaska\": \"AK\",\n  \"American Samoa\": \"AS\",\n  \"Arizona\": \"AZ\",\n  \"Arkansas\": \"AR\",\n  \"Armed Forces Americas\": \"AA\",\n  \"Armed Forces Europe\": \"AE\",\n  \"Armed Forces Pacific\": \"AP\",\n  \"California\": \"CA\",\n  \"Colorado\": \"CO\",\n  \"Connecticut\": \"CT\",\n  \"Delaware\": \"DE\",\n  \"District Of Columbia\": \"DC\",\n  \"Florida\": \"FL\",\n  \"Georgia\": \"GA\",\n  \"Guam\": \"GU\",\n  \"Hawaii\": \"HI\",\n  \"Idaho\": \"ID\",\n  \"Illinois\": \"IL\",\n  \"Indiana\": \"IN\",\n  \"Iowa\": \"IA\",\n  \"Kansas\": \"KS\",\n  \"Kentucky\": \"KY\",\n  \"Louisiana\": \"LA\",\n  \"Maine\": \"ME\",\n  \"Marshall Islands\": \"MH\",\n  \"Maryland\": \"MD\",\n  \"Massachusetts\": \"MA\",\n  \"Michigan\": \"MI\",\n  \"Minnesota\": \"MN\",\n  \"Mississippi\": \"MS\",\n  \"Missouri\": \"MO\",\n  \"Montana\": \"MT\",\n  \"Nebraska\": \"NE\",\n  \"Nevada\": \"NV\",\n  \"New Hampshire\": \"NH\",\n  \"New Jersey\": \"NJ\",\n  \"New Mexico\": \"NM\",\n  \"New York\": \"NY\",\n  \"North Carolina\": \"NC\",\n  \"North Dakota\": \"ND\",\n  \"Northern Mariana Islands\": \"NP\",\n  \"Ohio\": \"OH\",\n  \"Oklahoma\": \"OK\",\n  \"Oregon\": \"OR\",\n  \"Pennsylvania\": \"PA\",\n  \"Puerto Rico\": \"PR\",\n  \"Rhode Island\": \"RI\",\n  \"South Carolina\": \"SC\",\n  \"South Dakota\": \"SD\",\n  \"Tennessee\": \"TN\",\n  \"Texas\": \"TX\",\n  \"US Virgin Islands\": \"VI\",\n  \"Utah\": \"UT\",\n  \"Vermont\": \"VT\",\n  \"Virginia\": \"VA\",\n  \"Washington\": \"WA\",\n  \"West Virginia\": \"WV\",\n  \"Wisconsin\": \"WI\",\n  \"Wyoming\": \"WY\"\n};\nexport default function Textfield(props) {\n  _s();\n\n  const classes = useStyles();\n  const state = props.place;\n  const statesData = props.statesData;\n  const [stateInfo, setStatInfo] = useState([]);\n  var is_load_failed = false;\n  useEffect(() => {\n    WillitendService.getAllStateInfo().then(return_data => {\n      setStatInfo(return_data.data);\n    }).catch(err => {\n      alert(err);\n      is_load_failed = true;\n      console.log(\"Unable to Loaded\");\n    });\n    console.log(\"State Data has been loaded!\");\n  }, []);\n  const rows = [createData(state, '1', 'Days to Herd Immunity', '1'), createData(state, '2', 'Vaccinations Per Day', '1'), createData(state, '3', 'Citizens Currently Vaccinated (Fully)', '1'), createData(state, '4', 'Citizens Currently Vaccinated (Partially)', '1')];\n\n  function createData(state, rowId, measurement, result) {\n    /* simple edge case for demo w/ hard coded */\n    if (state === 'CA') {\n      result = 14;\n      return {\n        measurement,\n        result\n      };\n    } else if (state === \"\") {\n      result = \"NaN\";\n      return {\n        measurement,\n        result\n      };\n    } else {\n      /* iterate over the statesData and find the data for a particular state and populate using rowId */\n\n      /* for now simply add the hardcoded data using id */\n      if (rowId === '1') {\n        result = statesData.herdImmunityDays;\n      } else if (rowId === '2') {\n        result = statesData.vaccPerDay;\n      } else if (rowId === '3') {\n        result = statesData.fullVac;\n      } else {\n        result = statesData.partialVac;\n      }\n\n      return {\n        measurement,\n        result\n      };\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"COVID-19 Vaccine Results Table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: [state !== \"\" && /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Vaccine Results for \", state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), state === \"\" && /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Vaccine Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.measurement\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, row.measurement, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Textfield, \"s3ipB7SJaeaXkRfY//HqKlvXQGQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Textfield;\n\nvar _c;\n\n$RefreshReg$(_c, \"Textfield\");","map":{"version":3,"sources":["/Users/lihing1994/Desktop/willitend.com-home/src/components/Textfield.js"],"names":["Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","WillitendService","React","useState","useEffect","makeStyles","useStyles","table","width","display","justifyContent","alignItems","map","Textfield","props","classes","state","place","statesData","stateInfo","setStatInfo","is_load_failed","getAllStateInfo","then","return_data","data","catch","err","alert","console","log","rows","createData","rowId","measurement","result","herdImmunityDays","vaccPerDay","fullVac","partialVac","row"],"mappings":"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","sourcesContent":["import Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport WillitendService from '../services/Willitend.service.js';\nimport React, { useState ,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  table: {\n    width: '100%',\n    display: 'grid', \n    justifyContent: 'center', \n    alignItems: 'center',\n  }\n});\nconst map = {\n  \"Alabama\": \"AL\",\n  \"Alaska\" : \"AK\",\n  \"American Samoa\" : \"AS\",\n  \"Arizona\" : \"AZ\",\n  \"Arkansas\" : \"AR\",\n  \"Armed Forces Americas\" : \"AA\",\n  \"Armed Forces Europe\" : \"AE\",\n  \"Armed Forces Pacific\" : \"AP\",\n  \"California\" : \"CA\",\n  \"Colorado\" : \"CO\",\n  \"Connecticut\" : \"CT\",\n  \"Delaware\" : \"DE\",\n  \"District Of Columbia\" : \"DC\",\n  \"Florida\" : \"FL\",\n  \"Georgia\" : \"GA\",\n  \"Guam\" : \"GU\",\n  \"Hawaii\" : \"HI\",\n  \"Idaho\" : \"ID\",\n  \"Illinois\" : \"IL\",\n  \"Indiana\" : \"IN\",\n  \"Iowa\" : \"IA\",\n  \"Kansas\" : \"KS\",\n  \"Kentucky\" : \"KY\",\n  \"Louisiana\" : \"LA\",\n  \"Maine\" : \"ME\",\n  \"Marshall Islands\" : \"MH\",\n  \"Maryland\" : \"MD\",\n  \"Massachusetts\" : \"MA\",\n  \"Michigan\" : \"MI\",\n  \"Minnesota\" : \"MN\",\n  \"Mississippi\" : \"MS\",\n  \"Missouri\" : \"MO\",\n  \"Montana\" : \"MT\",\n  \"Nebraska\" : \"NE\",\n  \"Nevada\" : \"NV\",\n  \"New Hampshire\" : \"NH\",\n  \"New Jersey\" : \"NJ\",\n  \"New Mexico\" : \"NM\",\n  \"New York\" : \"NY\",\n  \"North Carolina\" : \"NC\",\n  \"North Dakota\" : \"ND\",\n  \"Northern Mariana Islands\" : \"NP\",\n  \"Ohio\" : \"OH\",\n  \"Oklahoma\" : \"OK\",\n  \"Oregon\" : \"OR\",\n  \"Pennsylvania\" : \"PA\",\n  \"Puerto Rico\" : \"PR\",\n  \"Rhode Island\" : \"RI\",\n  \"South Carolina\" : \"SC\",\n  \"South Dakota\" : \"SD\",\n  \"Tennessee\" : \"TN\",\n  \"Texas\" : \"TX\",\n  \"US Virgin Islands\" : \"VI\",\n  \"Utah\" : \"UT\",\n  \"Vermont\" : \"VT\",\n  \"Virginia\" : \"VA\",\n  \"Washington\" : \"WA\",\n  \"West Virginia\" : \"WV\",\n  \"Wisconsin\" : \"WI\",\n  \"Wyoming\" : \"WY\"\n}\n\n\nexport default function Textfield (props) {\n  const classes = useStyles();\n  const state = props.place; \n  const statesData = props.statesData;\n  const [stateInfo, setStatInfo] = useState([]);\n  var is_load_failed = false;\n  useEffect(() => {\n    WillitendService.getAllStateInfo()\n    .then(return_data =>{\n    setStatInfo(return_data.data)\n    })\n    .catch(err=>{\n      alert(err);\n      is_load_failed = true;\n      console.log(\"Unable to Loaded\");\n      }\n    );\n    console.log(\"State Data has been loaded!\");\n  }, []);\n\n  const rows = [\n  createData(state, '1', 'Days to Herd Immunity', '1'),\n  createData(state, '2', 'Vaccinations Per Day', '1'),\n  createData(state, '3', 'Citizens Currently Vaccinated (Fully)', '1'),\n  createData(state, '4', 'Citizens Currently Vaccinated (Partially)', '1'),\n];\n\nfunction createData(state, rowId, measurement, result) {\n\n  /* simple edge case for demo w/ hard coded */ \n  if (state === 'CA') {\n    result = 14; \n    return {measurement, result};\n  } else if (state === \"\") {\n\n    result = \"NaN\"; \n    return {measurement, result};\n  } else {\n  /* iterate over the statesData and find the data for a particular state and populate using rowId */ \n  /* for now simply add the hardcoded data using id */ \n      if (rowId === '1') {\n        result = statesData.herdImmunityDays; \n      } else if (rowId === '2') {\n        result = statesData.vaccPerDay; \n      } else if (rowId === '3') {\n        result = statesData.fullVac; \n      } else {\n        result = statesData.partialVac; \n      }\n\n  return {measurement, result}; \n  }\n}\n\n  return (\n    <TableContainer component = {Paper}>\n      <Table className={classes.table} aria-label=\"COVID-19 Vaccine Results Table\">\n        <TableHead>\n        {state !== \"\" && \n          <h4>Vaccine Results for {state}</h4>\n        }\n        {state === \"\" &&\n          <h3>Vaccine Results</h3>\n        }\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.measurement}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.measurement}\n              </TableCell>\n              <TableCell align=\"right\">{row.result}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}