{"ast":null,"code":"var _jsxFileName = \"/Users/lihing1994/Desktop/willitend.com/src/components/MapEcharts.js\";\nimport React from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapEcharts(props) {\n  var stateName = [];\n  var remainingDays = []; //Data Initialization\n\n  for (let i = 0; i < props.stateInfo.length; i++) {\n    stateName.push(props.stateInfo[i].name);\n    remainingDays.push(props.stateInfo[i].hdays);\n  }\n\n  const option = {\n    title: {\n      text: 'Days Until Herd Immunity',\n      left: \"center\",\n      textStyle: {\n        fontSize: 20,\n        fontWeight: 'bold'\n      }\n    },\n    tooltip: {},\n    legend: {\n      data: ['Days'],\n      left: 'right'\n    },\n    xAxis: {\n      data: stateName,\n      name: 'States',\n      nameLocation: 'end',\n      left: 'right',\n      axisLine: {\n        symbol: ['none', 'arrow'],\n        symbolOffset: [0, 12]\n      },\n      nameTextStyle: {\n        fontWeight: 'bold',\n        fontSize: '20',\n        fontFamily: \"monospace\"\n      }\n    },\n    yAxis: {\n      name: 'Days',\n      nameLocation: 'start',\n      nameTextStyle: {\n        align: 'center',\n        verticalAlign: 'top',\n        fontWeight: 'bold',\n        fontSize: '20',\n        fontFamily: \"monospace\"\n      }\n    },\n    series: [{\n      name: 'Days',\n      showBackground: true,\n      type: 'bar',\n      data: remainingDays,\n      label: {\n        position: 'top',\n        show: true\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    style: {\n      height: 400\n    },\n    opts: {\n      renderer: 'svg'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n}\n_c = MapEcharts;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapEcharts\");","map":{"version":3,"sources":["/Users/lihing1994/Desktop/willitend.com/src/components/MapEcharts.js"],"names":["React","ReactECharts","MapEcharts","props","stateName","remainingDays","i","stateInfo","length","push","name","hdays","option","title","text","left","textStyle","fontSize","fontWeight","tooltip","legend","data","xAxis","nameLocation","axisLine","symbol","symbolOffset","nameTextStyle","fontFamily","yAxis","align","verticalAlign","series","showBackground","type","label","position","show","height","renderer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AACA,eAAe,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AACzC,MAAIC,SAAS,GAAE,EAAf;AACA,MAAIC,aAAa,GAAE,EAAnB,CAFyC,CAGzC;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAACH,KAAK,CAACI,SAAN,CAAgBC,MAAhC,EAAuCF,CAAC,EAAxC,EAA2C;AACvCF,IAAAA,SAAS,CAACK,IAAV,CAAeN,KAAK,CAACI,SAAN,CAAgBD,CAAhB,EAAmBI,IAAlC;AACAL,IAAAA,aAAa,CAACI,IAAd,CAAmBN,KAAK,CAACI,SAAN,CAAgBD,CAAhB,EAAmBK,KAAtC;AACH;;AACD,QAAMC,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,0BADD;AAELC,MAAAA,IAAI,EAAE,QAFD;AAGLC,MAAAA,SAAS,EAAC;AACRC,QAAAA,QAAQ,EAAE,EADF;AAERC,QAAAA,UAAU,EAAE;AAFJ;AAHL,KADM;AASbC,IAAAA,OAAO,EAAE,EATI;AAUbC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAC,CAAC,MAAD,CADC;AAENN,MAAAA,IAAI,EAAC;AAFC,KAVK;AAcbO,IAAAA,KAAK,EAAE;AACLD,MAAAA,IAAI,EAAEjB,SADD;AAELM,MAAAA,IAAI,EAAE,QAFD;AAGLa,MAAAA,YAAY,EAAC,KAHR;AAILR,MAAAA,IAAI,EAAC,OAJA;AAKLS,MAAAA,QAAQ,EAAC;AACPC,QAAAA,MAAM,EAAE,CAAC,MAAD,EAAQ,OAAR,CADD;AAEPC,QAAAA,YAAY,EAAC,CAAC,CAAD,EAAG,EAAH;AAFN,OALJ;AASLC,MAAAA,aAAa,EAAE;AACbT,QAAAA,UAAU,EAAG,MADA;AAEbD,QAAAA,QAAQ,EAAE,IAFG;AAGbW,QAAAA,UAAU,EAAE;AAHC;AATV,KAdM;AA6BbC,IAAAA,KAAK,EAAE;AACHnB,MAAAA,IAAI,EAAE,MADH;AAEHa,MAAAA,YAAY,EAAC,OAFV;AAGHI,MAAAA,aAAa,EAAE;AACXG,QAAAA,KAAK,EAAC,QADK;AAEXC,QAAAA,aAAa,EAAC,KAFH;AAGXb,QAAAA,UAAU,EAAG,MAHF;AAIXD,QAAAA,QAAQ,EAAE,IAJC;AAKXW,QAAAA,UAAU,EAAE;AALD;AAHZ,KA7BM;AAwCbI,IAAAA,MAAM,EAAE,CAAC;AACPtB,MAAAA,IAAI,EAAE,MADC;AAEPuB,MAAAA,cAAc,EAAE,IAFT;AAGPC,MAAAA,IAAI,EAAE,KAHC;AAIPb,MAAAA,IAAI,EAAEhB,aAJC;AAKP8B,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,KADL;AAELC,QAAAA,IAAI,EAAE;AAFD;AALA,KAAD;AAxCK,GAAf;AAmDE,sBAAO,QAAC,YAAD;AAAc,IAAA,MAAM,EAAEzB,MAAtB;AAA8B,IAAA,KAAK,EAAE;AAAE0B,MAAAA,MAAM,EAAE;AAAV,KAArC;AAAsD,IAAA,IAAI,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAA5D;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH;KA7DuBrC,U;AA6DvB","sourcesContent":["import React from 'react';\nimport ReactECharts from 'echarts-for-react';\nexport default function MapEcharts (props) {\n  var stateName =[];\n  var remainingDays =[];\n  //Data Initialization\n  for(let i = 0;i<props.stateInfo.length;i++){\n      stateName.push(props.stateInfo[i].name);\n      remainingDays.push(props.stateInfo[i].hdays);\n  }\n  const option = {\n    title: {\n      text: 'Days Until Herd Immunity',\n      left: \"center\",\n      textStyle:{\n        fontSize: 20,\n        fontWeight :'bold'\n      }\n    },\n    tooltip: {},\n    legend: {\n      data:['Days'],\n      left:'right'\n    },\n    xAxis: {\n      data: stateName,\n      name: 'States',\n      nameLocation:'end',\n      left:'right',\n      axisLine:{\n        symbol: ['none','arrow'],\n        symbolOffset:[0,12]\n      },\n      nameTextStyle: {\n        fontWeight : 'bold',\n        fontSize: '20',\n        fontFamily: \"monospace\",\n      }\n    },\n    yAxis: {\n        name: 'Days',\n        nameLocation:'start',\n        nameTextStyle: {\n            align:'center',\n            verticalAlign:'top',\n            fontWeight : 'bold',\n            fontSize: '20',\n            fontFamily: \"monospace\",\n      }\n    },\n    series: [{\n      name: 'Days',\n      showBackground: true,\n      type: 'bar',\n      data: remainingDays,\n      label: {\n        position: 'top',\n        show: true\n      },\n    }]\n  };\n    return <ReactECharts option={option} style={{ height: 400 }} opts={{ renderer: 'svg' }}\n  />;\n};"]},"metadata":{},"sourceType":"module"}