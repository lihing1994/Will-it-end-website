{"ast":null,"code":"var _jsxFileName = \"/Users/lihing1994/Desktop/willitend.com-home-Backup/willitend.com-home/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport Dropdown from './Dropdown.js';\nimport Grid from '@material-ui/core/Grid';\nimport Map from \"./Map.js\";\nimport ReactTooltip from \"react-tooltip\";\nimport Textfield from './Textfield.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react';\nimport WillitendService from '../services/Willitend.service.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\nvar is_load_failed = false;\nvar is_load = false;\nexport default function Home() {\n  _s();\n\n  const classes = useStyles();\n  const [place, setPlace] = useState(\"\");\n  const [stateInfo, setStateInfo] = useState(\"\");\n  const [stateImmunityInfo, setStateImmunityInfo] = useEffect([]);\n\n  function getDataFromBackend() {\n    /*\n    Make backend call to fetch the data for the state and then return the result using rowId\n    */\n\n    /* hard coded for now */\n    var data = {\n      herdImmunityDays: 12,\n      vaccPerDay: 144,\n      fullVac: 10,\n      partialVac: 23\n    };\n    return data;\n  }\n\n  var data = getDataFromBackend();\n\n  const handlePlaceChange = place => {\n    setPlace(place);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(Map, {\n          setToolTipContent: setStateInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n          type: \"light\",\n          multiline: true,\n          html: true,\n          border: true,\n          children: stateInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          place: place,\n          onPlaceChange: handlePlaceChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Textfield, {\n          place: place\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"fokqg6WiskhZnFnCPY9NRBM9Jdg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/lihing1994/Desktop/willitend.com-home-Backup/willitend.com-home/src/components/Home.js"],"names":["Dropdown","Grid","Map","ReactTooltip","Textfield","makeStyles","React","useEffect","useState","WillitendService","useStyles","theme","root","flexGrow","padding","spacing","is_load_failed","is_load","Home","classes","place","setPlace","stateInfo","setStateInfo","stateImmunityInfo","setStateImmunityInfo","getDataFromBackend","data","herdImmunityDays","vaccPerDay","fullVac","partialVac","handlePlaceChange"],"mappings":"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","sourcesContent":["import Dropdown from './Dropdown.js'\nimport Grid from '@material-ui/core/Grid';\nimport Map from \"./Map.js\"; \nimport ReactTooltip from \"react-tooltip\";\nimport Textfield from './Textfield.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react';\nimport WillitendService from '../services/Willitend.service.js';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\n\nvar is_load_failed = false;\nvar is_load = false;\n\nexport default function Home() {\n\n    const classes = useStyles();\n    const [place, setPlace] = useState(\"\");\n    const [stateInfo, setStateInfo] = useState(\"\"); \n    const [stateImmunityInfo,setStateImmunityInfo] = useEffect([]);\n      \n\n    function getDataFromBackend () {\n    /*\n    Make backend call to fetch the data for the state and then return the result using rowId\n    */\n\n    /* hard coded for now */ \n    var data = {\n      herdImmunityDays : 12, \n      vaccPerDay: 144, \n      fullVac: 10, \n      partialVac: 23\n    }\n\n    return data; \n  }\n\n  var data = getDataFromBackend();\n    const handlePlaceChange = (place) => {\n      setPlace(place);\n  }; \n\n  return (\n    <div className={classes.root} >\n     <Grid container = {true} direction = \"row\" justify = \"center\" alignItems = \"center\" spacing = {3}>    \n    <Grid item  xs = {12} md = {9}> \n    <Map setToolTipContent = {setStateInfo} />\n    <ReactTooltip type = \"light\" multiline html border >{stateInfo}</ReactTooltip>\n    </Grid>\n     <Grid item xs = {12} md = {3} spacing = {3} > \n      <Dropdown place ={place} onPlaceChange = {handlePlaceChange} />\n      <Textfield place = {place}/>\n    </Grid> \n    </Grid>\n\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}